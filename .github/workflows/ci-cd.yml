
name: CI/CD - Student Feedback Portal (Flask + Docker + Render)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write
  deployments: write

jobs:
  lint_test:
    name: Install → Lint → Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Lint
        run: flake8 .

      - name: Test
        run: pytest -q

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: lint_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t student-feedback-portal:${{ github.sha }} .

      - name: Save image as artifact
        run: docker save student-feedback-portal:${{ github.sha }} | gzip > image.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  deploy:
    name: Deploy (Render via Deploy Hook)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render deploy hook (optional)
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [ -z "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "No RENDER_DEPLOY_HOOK_URL secret set. Skipping deploy."
            exit 0
          fi
          echo "Triggering Render deploy..."
          curl -fsSL -X POST "$RENDER_DEPLOY_HOOK_URL"
          echo "Deploy hook triggered."
